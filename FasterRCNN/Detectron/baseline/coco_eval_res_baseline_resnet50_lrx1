Command Line Args: Namespace(config_file='../configs/COCO-Detection/faster_rcnn_R_50_C4_1x.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', '../../FasterRCNN/Detectron/baseline/model_final_721ade.pkl'], resume=False)
[32m[11/13 20:37:34 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/13 20:37:34 detectron2]: [0mEnvironment info:
----------------------  -----------------------------------------------------------------
sys.platform            linux
Python                  3.6.9 (default, Oct  8 2020, 12:12:24) [GCC 8.4.0]
numpy                   1.19.4
detectron2              0.3 @/home/david/Desktop/CS486_model/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 10.2
detectron2 arch flags   6.1
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.7.0 @/home/david/.local/lib/python3.6/site-packages/torch
PyTorch debug build     True
GPU available           True
GPU 0                   GeForce GTX 1080 (arch=6.1)
CUDA_HOME               /usr/local/cuda-10.2
Pillow                  8.0.1
torchvision             0.8.1 @/home/david/.local/lib/python3.6/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20201111
cv2                     4.4.0
----------------------  -----------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[11/13 20:37:34 detectron2]: [0mCommand line arguments: Namespace(config_file='../configs/COCO-Detection/faster_rcnn_R_50_C4_1x.yaml', dist_url='tcp://127.0.0.1:50152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', '../../FasterRCNN/Detectron/baseline/model_final_721ade.pkl'], resume=False)
[32m[11/13 20:37:34 detectron2]: [0mContents of args.config_file=../configs/COCO-Detection/faster_rcnn_R_50_C4_1x.yaml:
_BASE_: "../Base-RCNN-C4.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  MASK_ON: False
  RESNETS:
    DEPTH: 50

[32m[11/13 20:37:34 detectron2]: [0mRunning with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: False
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res4']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ../../FasterRCNN/Detectron/baseline/model_final_721ade.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: False
  BASE_LR: 0.02
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[32m[11/13 20:37:34 detectron2]: [0mFull config saved to ./output/config.yaml
[32m[11/13 20:37:34 d2.utils.env]: [0mUsing a generated random seed 34571660
[32m[11/13 20:37:36 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=320, bias=True)
    )
  )
)
[32m[11/13 20:37:36 fvcore.common.checkpoint]: [0mLoading checkpoint from ../../FasterRCNN/Detectron/baseline/model_final_721ade.pkl
[32m[11/13 20:37:36 fvcore.common.checkpoint]: [0mReading a file from 'Detectron2 Model Zoo'
[32m[11/13 20:37:36 d2.data.datasets.coco]: [0mLoaded 5000 images in COCO format from /home/david/Desktop/CS486_model/datasets/coco/annotations/instances_val2017.json
[32m[11/13 20:37:36 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10777        |   bicycle    | 314          |      car      | 1918         |
|  motorcycle   | 367          |   airplane   | 143          |      bus      | 283          |
|     train     | 190          |    truck     | 414          |     boat      | 424          |
| traffic light | 634          | fire hydrant | 101          |   stop sign   | 75           |
| parking meter | 60           |    bench     | 411          |     bird      | 427          |
|      cat      | 202          |     dog      | 218          |     horse     | 272          |
|     sheep     | 354          |     cow      | 372          |   elephant    | 252          |
|     bear      | 71           |    zebra     | 266          |    giraffe    | 232          |
|   backpack    | 371          |   umbrella   | 407          |    handbag    | 540          |
|      tie      | 252          |   suitcase   | 299          |    frisbee    | 115          |
|     skis      | 241          |  snowboard   | 69           |  sports ball  | 260          |
|     kite      | 327          | baseball bat | 145          | baseball gl.. | 148          |
|  skateboard   | 179          |  surfboard   | 267          | tennis racket | 225          |
|    bottle     | 1013         |  wine glass  | 341          |      cup      | 895          |
|     fork      | 215          |    knife     | 325          |     spoon     | 253          |
|     bowl      | 623          |    banana    | 370          |     apple     | 236          |
|   sandwich    | 177          |    orange    | 285          |   broccoli    | 312          |
|    carrot     | 365          |   hot dog    | 125          |     pizza     | 284          |
|     donut     | 328          |     cake     | 310          |     chair     | 1771         |
|     couch     | 261          | potted plant | 342          |      bed      | 163          |
| dining table  | 695          |    toilet    | 179          |      tv       | 288          |
|    laptop     | 231          |    mouse     | 106          |    remote     | 283          |
|   keyboard    | 153          |  cell phone  | 262          |   microwave   | 55           |
|     oven      | 143          |   toaster    | 9            |     sink      | 225          |
| refrigerator  | 126          |     book     | 1129         |     clock     | 267          |
|     vase      | 274          |   scissors   | 36           |  teddy bear   | 190          |
|  hair drier   | 11           |  toothbrush  | 57           |               |              |
|     total     | 36335        |              |              |               |              |[0m
[32m[11/13 20:37:36 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/13 20:37:36 d2.data.common]: [0mSerializing 5000 elements to byte tensors and concatenating them all ...
[32m[11/13 20:37:36 d2.data.common]: [0mSerialized dataset takes 19.25 MiB
[5m[31mWARNING[0m [32m[11/13 20:37:36 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass tasks in directly
[32m[11/13 20:37:37 d2.evaluation.evaluator]: [0mStart inference on 5000 images
[32m[11/13 20:37:39 d2.evaluation.evaluator]: [0mInference done 11/5000. 0.2751 s / img. ETA=0:22:55
[32m[11/13 20:37:45 d2.evaluation.evaluator]: [0mInference done 35/5000. 0.2296 s / img. ETA=0:19:04
[32m[11/13 20:37:50 d2.evaluation.evaluator]: [0mInference done 61/5000. 0.2154 s / img. ETA=0:17:48
[32m[11/13 20:37:55 d2.evaluation.evaluator]: [0mInference done 83/5000. 0.2204 s / img. ETA=0:18:07
[32m[11/13 20:38:00 d2.evaluation.evaluator]: [0mInference done 107/5000. 0.2183 s / img. ETA=0:17:52
[32m[11/13 20:38:05 d2.evaluation.evaluator]: [0mInference done 131/5000. 0.2171 s / img. ETA=0:17:41
[32m[11/13 20:38:10 d2.evaluation.evaluator]: [0mInference done 155/5000. 0.2167 s / img. ETA=0:17:33
[32m[11/13 20:38:15 d2.evaluation.evaluator]: [0mInference done 177/5000. 0.2181 s / img. ETA=0:17:36
[32m[11/13 20:38:20 d2.evaluation.evaluator]: [0mInference done 202/5000. 0.2159 s / img. ETA=0:17:19
[32m[11/13 20:38:26 d2.evaluation.evaluator]: [0mInference done 228/5000. 0.2139 s / img. ETA=0:17:04
[32m[11/13 20:38:31 d2.evaluation.evaluator]: [0mInference done 252/5000. 0.2139 s / img. ETA=0:16:59
[32m[11/13 20:38:36 d2.evaluation.evaluator]: [0mInference done 278/5000. 0.2126 s / img. ETA=0:16:47
[32m[11/13 20:38:41 d2.evaluation.evaluator]: [0mInference done 301/5000. 0.2130 s / img. ETA=0:16:45
[32m[11/13 20:38:46 d2.evaluation.evaluator]: [0mInference done 323/5000. 0.2141 s / img. ETA=0:16:45
[32m[11/13 20:38:51 d2.evaluation.evaluator]: [0mInference done 345/5000. 0.2153 s / img. ETA=0:16:46
[32m[11/13 20:38:56 d2.evaluation.evaluator]: [0mInference done 366/5000. 0.2170 s / img. ETA=0:16:50
[32m[11/13 20:39:02 d2.evaluation.evaluator]: [0mInference done 390/5000. 0.2172 s / img. ETA=0:16:46
[32m[11/13 20:39:07 d2.evaluation.evaluator]: [0mInference done 415/5000. 0.2168 s / img. ETA=0:16:38
[32m[11/13 20:39:12 d2.evaluation.evaluator]: [0mInference done 439/5000. 0.2167 s / img. ETA=0:16:32
[32m[11/13 20:39:17 d2.evaluation.evaluator]: [0mInference done 465/5000. 0.2158 s / img. ETA=0:16:23
[32m[11/13 20:39:23 d2.evaluation.evaluator]: [0mInference done 489/5000. 0.2159 s / img. ETA=0:16:18
[32m[11/13 20:39:28 d2.evaluation.evaluator]: [0mInference done 512/5000. 0.2161 s / img. ETA=0:16:14
[32m[11/13 20:39:33 d2.evaluation.evaluator]: [0mInference done 534/5000. 0.2165 s / img. ETA=0:16:11
[32m[11/13 20:39:38 d2.evaluation.evaluator]: [0mInference done 557/5000. 0.2166 s / img. ETA=0:16:06
[32m[11/13 20:39:43 d2.evaluation.evaluator]: [0mInference done 581/5000. 0.2163 s / img. ETA=0:16:00
[32m[11/13 20:39:48 d2.evaluation.evaluator]: [0mInference done 609/5000. 0.2147 s / img. ETA=0:15:47
[32m[11/13 20:39:53 d2.evaluation.evaluator]: [0mInference done 636/5000. 0.2136 s / img. ETA=0:15:36
[32m[11/13 20:39:58 d2.evaluation.evaluator]: [0mInference done 658/5000. 0.2143 s / img. ETA=0:15:34
[32m[11/13 20:40:03 d2.evaluation.evaluator]: [0mInference done 682/5000. 0.2142 s / img. ETA=0:15:28
[32m[11/13 20:40:09 d2.evaluation.evaluator]: [0mInference done 708/5000. 0.2137 s / img. ETA=0:15:21
[32m[11/13 20:40:14 d2.evaluation.evaluator]: [0mInference done 731/5000. 0.2142 s / img. ETA=0:15:18
[32m[11/13 20:40:19 d2.evaluation.evaluator]: [0mInference done 754/5000. 0.2144 s / img. ETA=0:15:14
[32m[11/13 20:40:24 d2.evaluation.evaluator]: [0mInference done 778/5000. 0.2143 s / img. ETA=0:15:08
[32m[11/13 20:40:29 d2.evaluation.evaluator]: [0mInference done 803/5000. 0.2139 s / img. ETA=0:15:01
[32m[11/13 20:40:34 d2.evaluation.evaluator]: [0mInference done 826/5000. 0.2142 s / img. ETA=0:14:58
[32m[11/13 20:40:40 d2.evaluation.evaluator]: [0mInference done 848/5000. 0.2147 s / img. ETA=0:14:55
[32m[11/13 20:40:45 d2.evaluation.evaluator]: [0mInference done 872/5000. 0.2148 s / img. ETA=0:14:50
[32m[11/13 20:40:50 d2.evaluation.evaluator]: [0mInference done 897/5000. 0.2144 s / img. ETA=0:14:43
[32m[11/13 20:40:55 d2.evaluation.evaluator]: [0mInference done 922/5000. 0.2141 s / img. ETA=0:14:37
[32m[11/13 20:41:00 d2.evaluation.evaluator]: [0mInference done 948/5000. 0.2138 s / img. ETA=0:14:29
[32m[11/13 20:41:05 d2.evaluation.evaluator]: [0mInference done 974/5000. 0.2134 s / img. ETA=0:14:22
[32m[11/13 20:41:10 d2.evaluation.evaluator]: [0mInference done 999/5000. 0.2130 s / img. ETA=0:14:16
[32m[11/13 20:41:16 d2.evaluation.evaluator]: [0mInference done 1021/5000. 0.2135 s / img. ETA=0:14:13
[32m[11/13 20:41:21 d2.evaluation.evaluator]: [0mInference done 1044/5000. 0.2137 s / img. ETA=0:14:08
[32m[11/13 20:41:26 d2.evaluation.evaluator]: [0mInference done 1068/5000. 0.2137 s / img. ETA=0:14:04
[32m[11/13 20:41:31 d2.evaluation.evaluator]: [0mInference done 1093/5000. 0.2136 s / img. ETA=0:13:58
[32m[11/13 20:41:36 d2.evaluation.evaluator]: [0mInference done 1116/5000. 0.2136 s / img. ETA=0:13:53
[32m[11/13 20:41:41 d2.evaluation.evaluator]: [0mInference done 1139/5000. 0.2139 s / img. ETA=0:13:49
[32m[11/13 20:41:47 d2.evaluation.evaluator]: [0mInference done 1159/5000. 0.2147 s / img. ETA=0:13:48
[32m[11/13 20:41:52 d2.evaluation.evaluator]: [0mInference done 1184/5000. 0.2144 s / img. ETA=0:13:41
[32m[11/13 20:41:57 d2.evaluation.evaluator]: [0mInference done 1208/5000. 0.2143 s / img. ETA=0:13:36
[32m[11/13 20:42:02 d2.evaluation.evaluator]: [0mInference done 1231/5000. 0.2145 s / img. ETA=0:13:31
[32m[11/13 20:42:07 d2.evaluation.evaluator]: [0mInference done 1254/5000. 0.2148 s / img. ETA=0:13:27
[32m[11/13 20:42:12 d2.evaluation.evaluator]: [0mInference done 1278/5000. 0.2147 s / img. ETA=0:13:22
[32m[11/13 20:42:17 d2.evaluation.evaluator]: [0mInference done 1302/5000. 0.2147 s / img. ETA=0:13:17
[32m[11/13 20:42:23 d2.evaluation.evaluator]: [0mInference done 1326/5000. 0.2147 s / img. ETA=0:13:12
[32m[11/13 20:42:28 d2.evaluation.evaluator]: [0mInference done 1350/5000. 0.2146 s / img. ETA=0:13:06
[32m[11/13 20:42:33 d2.evaluation.evaluator]: [0mInference done 1375/5000. 0.2143 s / img. ETA=0:13:00
[32m[11/13 20:42:38 d2.evaluation.evaluator]: [0mInference done 1398/5000. 0.2144 s / img. ETA=0:12:55
[32m[11/13 20:42:43 d2.evaluation.evaluator]: [0mInference done 1422/5000. 0.2144 s / img. ETA=0:12:50
[32m[11/13 20:42:48 d2.evaluation.evaluator]: [0mInference done 1447/5000. 0.2142 s / img. ETA=0:12:44
[32m[11/13 20:42:53 d2.evaluation.evaluator]: [0mInference done 1473/5000. 0.2138 s / img. ETA=0:12:37
[32m[11/13 20:42:58 d2.evaluation.evaluator]: [0mInference done 1499/5000. 0.2135 s / img. ETA=0:12:30
[32m[11/13 20:43:03 d2.evaluation.evaluator]: [0mInference done 1524/5000. 0.2133 s / img. ETA=0:12:24
[32m[11/13 20:43:08 d2.evaluation.evaluator]: [0mInference done 1546/5000. 0.2137 s / img. ETA=0:12:21
[32m[11/13 20:43:14 d2.evaluation.evaluator]: [0mInference done 1572/5000. 0.2133 s / img. ETA=0:12:14
[32m[11/13 20:43:19 d2.evaluation.evaluator]: [0mInference done 1595/5000. 0.2135 s / img. ETA=0:12:10
[32m[11/13 20:43:24 d2.evaluation.evaluator]: [0mInference done 1619/5000. 0.2134 s / img. ETA=0:12:04
[32m[11/13 20:43:29 d2.evaluation.evaluator]: [0mInference done 1644/5000. 0.2134 s / img. ETA=0:11:59
[32m[11/13 20:43:34 d2.evaluation.evaluator]: [0mInference done 1666/5000. 0.2136 s / img. ETA=0:11:55
[32m[11/13 20:43:39 d2.evaluation.evaluator]: [0mInference done 1687/5000. 0.2139 s / img. ETA=0:11:51
[32m[11/13 20:43:44 d2.evaluation.evaluator]: [0mInference done 1709/5000. 0.2141 s / img. ETA=0:11:47
[32m[11/13 20:43:49 d2.evaluation.evaluator]: [0mInference done 1731/5000. 0.2143 s / img. ETA=0:11:43
[32m[11/13 20:43:54 d2.evaluation.evaluator]: [0mInference done 1754/5000. 0.2143 s / img. ETA=0:11:38
[32m[11/13 20:43:59 d2.evaluation.evaluator]: [0mInference done 1777/5000. 0.2145 s / img. ETA=0:11:34
[32m[11/13 20:44:05 d2.evaluation.evaluator]: [0mInference done 1798/5000. 0.2148 s / img. ETA=0:11:31
[32m[11/13 20:44:10 d2.evaluation.evaluator]: [0mInference done 1823/5000. 0.2147 s / img. ETA=0:11:25
[32m[11/13 20:44:15 d2.evaluation.evaluator]: [0mInference done 1848/5000. 0.2147 s / img. ETA=0:11:19
[32m[11/13 20:44:20 d2.evaluation.evaluator]: [0mInference done 1870/5000. 0.2148 s / img. ETA=0:11:15
[32m[11/13 20:44:25 d2.evaluation.evaluator]: [0mInference done 1893/5000. 0.2149 s / img. ETA=0:11:10
[32m[11/13 20:44:30 d2.evaluation.evaluator]: [0mInference done 1916/5000. 0.2150 s / img. ETA=0:11:06
[32m[11/13 20:44:36 d2.evaluation.evaluator]: [0mInference done 1940/5000. 0.2150 s / img. ETA=0:11:00
[32m[11/13 20:44:41 d2.evaluation.evaluator]: [0mInference done 1963/5000. 0.2151 s / img. ETA=0:10:56
[32m[11/13 20:44:46 d2.evaluation.evaluator]: [0mInference done 1986/5000. 0.2151 s / img. ETA=0:10:51
[32m[11/13 20:44:51 d2.evaluation.evaluator]: [0mInference done 2010/5000. 0.2151 s / img. ETA=0:10:46
[32m[11/13 20:44:56 d2.evaluation.evaluator]: [0mInference done 2036/5000. 0.2149 s / img. ETA=0:10:39
[32m[11/13 20:45:01 d2.evaluation.evaluator]: [0mInference done 2059/5000. 0.2150 s / img. ETA=0:10:35
[32m[11/13 20:45:06 d2.evaluation.evaluator]: [0mInference done 2085/5000. 0.2148 s / img. ETA=0:10:28
[32m[11/13 20:45:11 d2.evaluation.evaluator]: [0mInference done 2108/5000. 0.2148 s / img. ETA=0:10:23
[32m[11/13 20:45:17 d2.evaluation.evaluator]: [0mInference done 2132/5000. 0.2147 s / img. ETA=0:10:18
[32m[11/13 20:45:22 d2.evaluation.evaluator]: [0mInference done 2152/5000. 0.2152 s / img. ETA=0:10:15
[32m[11/13 20:45:27 d2.evaluation.evaluator]: [0mInference done 2174/5000. 0.2153 s / img. ETA=0:10:11
[32m[11/13 20:45:32 d2.evaluation.evaluator]: [0mInference done 2201/5000. 0.2150 s / img. ETA=0:10:04
[32m[11/13 20:45:37 d2.evaluation.evaluator]: [0mInference done 2224/5000. 0.2151 s / img. ETA=0:09:59
[32m[11/13 20:45:42 d2.evaluation.evaluator]: [0mInference done 2246/5000. 0.2152 s / img. ETA=0:09:55
[32m[11/13 20:45:47 d2.evaluation.evaluator]: [0mInference done 2267/5000. 0.2154 s / img. ETA=0:09:51
[32m[11/13 20:45:52 d2.evaluation.evaluator]: [0mInference done 2292/5000. 0.2153 s / img. ETA=0:09:45
[32m[11/13 20:45:57 d2.evaluation.evaluator]: [0mInference done 2315/5000. 0.2153 s / img. ETA=0:09:40
[32m[11/13 20:46:03 d2.evaluation.evaluator]: [0mInference done 2340/5000. 0.2152 s / img. ETA=0:09:35
[32m[11/13 20:46:08 d2.evaluation.evaluator]: [0mInference done 2365/5000. 0.2151 s / img. ETA=0:09:29
[32m[11/13 20:46:13 d2.evaluation.evaluator]: [0mInference done 2387/5000. 0.2152 s / img. ETA=0:09:24
[32m[11/13 20:46:18 d2.evaluation.evaluator]: [0mInference done 2407/5000. 0.2155 s / img. ETA=0:09:21
[32m[11/13 20:46:23 d2.evaluation.evaluator]: [0mInference done 2430/5000. 0.2156 s / img. ETA=0:09:16
[32m[11/13 20:46:28 d2.evaluation.evaluator]: [0mInference done 2454/5000. 0.2156 s / img. ETA=0:09:11
[32m[11/13 20:46:33 d2.evaluation.evaluator]: [0mInference done 2481/5000. 0.2153 s / img. ETA=0:09:04
[32m[11/13 20:46:38 d2.evaluation.evaluator]: [0mInference done 2505/5000. 0.2153 s / img. ETA=0:08:59
[32m[11/13 20:46:43 d2.evaluation.evaluator]: [0mInference done 2530/5000. 0.2152 s / img. ETA=0:08:53
[32m[11/13 20:46:49 d2.evaluation.evaluator]: [0mInference done 2553/5000. 0.2152 s / img. ETA=0:08:49
[32m[11/13 20:46:54 d2.evaluation.evaluator]: [0mInference done 2575/5000. 0.2154 s / img. ETA=0:08:44
[32m[11/13 20:46:59 d2.evaluation.evaluator]: [0mInference done 2598/5000. 0.2154 s / img. ETA=0:08:39
[32m[11/13 20:47:04 d2.evaluation.evaluator]: [0mInference done 2623/5000. 0.2153 s / img. ETA=0:08:34
[32m[11/13 20:47:09 d2.evaluation.evaluator]: [0mInference done 2645/5000. 0.2155 s / img. ETA=0:08:29
[32m[11/13 20:47:14 d2.evaluation.evaluator]: [0mInference done 2667/5000. 0.2156 s / img. ETA=0:08:25
[32m[11/13 20:47:19 d2.evaluation.evaluator]: [0mInference done 2695/5000. 0.2152 s / img. ETA=0:08:18
[32m[11/13 20:47:25 d2.evaluation.evaluator]: [0mInference done 2720/5000. 0.2152 s / img. ETA=0:08:12
[32m[11/13 20:47:30 d2.evaluation.evaluator]: [0mInference done 2742/5000. 0.2153 s / img. ETA=0:08:08
[32m[11/13 20:47:35 d2.evaluation.evaluator]: [0mInference done 2769/5000. 0.2150 s / img. ETA=0:08:01
[32m[11/13 20:47:40 d2.evaluation.evaluator]: [0mInference done 2796/5000. 0.2148 s / img. ETA=0:07:55
[32m[11/13 20:47:45 d2.evaluation.evaluator]: [0mInference done 2819/5000. 0.2149 s / img. ETA=0:07:50
[32m[11/13 20:47:50 d2.evaluation.evaluator]: [0mInference done 2843/5000. 0.2149 s / img. ETA=0:07:45
[32m[11/13 20:47:56 d2.evaluation.evaluator]: [0mInference done 2869/5000. 0.2148 s / img. ETA=0:07:39
[32m[11/13 20:48:01 d2.evaluation.evaluator]: [0mInference done 2894/5000. 0.2147 s / img. ETA=0:07:34
[32m[11/13 20:48:06 d2.evaluation.evaluator]: [0mInference done 2917/5000. 0.2147 s / img. ETA=0:07:29
[32m[11/13 20:48:11 d2.evaluation.evaluator]: [0mInference done 2939/5000. 0.2148 s / img. ETA=0:07:24
[32m[11/13 20:48:16 d2.evaluation.evaluator]: [0mInference done 2960/5000. 0.2150 s / img. ETA=0:07:20
[32m[11/13 20:48:21 d2.evaluation.evaluator]: [0mInference done 2982/5000. 0.2151 s / img. ETA=0:07:16
[32m[11/13 20:48:26 d2.evaluation.evaluator]: [0mInference done 3009/5000. 0.2148 s / img. ETA=0:07:09
[32m[11/13 20:48:31 d2.evaluation.evaluator]: [0mInference done 3033/5000. 0.2148 s / img. ETA=0:07:04
[32m[11/13 20:48:36 d2.evaluation.evaluator]: [0mInference done 3060/5000. 0.2146 s / img. ETA=0:06:58
[32m[11/13 20:48:42 d2.evaluation.evaluator]: [0mInference done 3085/5000. 0.2145 s / img. ETA=0:06:52
[32m[11/13 20:48:47 d2.evaluation.evaluator]: [0mInference done 3111/5000. 0.2144 s / img. ETA=0:06:46
[32m[11/13 20:48:52 d2.evaluation.evaluator]: [0mInference done 3134/5000. 0.2144 s / img. ETA=0:06:41
[32m[11/13 20:48:57 d2.evaluation.evaluator]: [0mInference done 3159/5000. 0.2143 s / img. ETA=0:06:36
[32m[11/13 20:49:02 d2.evaluation.evaluator]: [0mInference done 3182/5000. 0.2144 s / img. ETA=0:06:31
[32m[11/13 20:49:07 d2.evaluation.evaluator]: [0mInference done 3207/5000. 0.2143 s / img. ETA=0:06:26
[32m[11/13 20:49:12 d2.evaluation.evaluator]: [0mInference done 3229/5000. 0.2144 s / img. ETA=0:06:21
[32m[11/13 20:49:17 d2.evaluation.evaluator]: [0mInference done 3252/5000. 0.2145 s / img. ETA=0:06:16
[32m[11/13 20:49:23 d2.evaluation.evaluator]: [0mInference done 3276/5000. 0.2145 s / img. ETA=0:06:11
[32m[11/13 20:49:28 d2.evaluation.evaluator]: [0mInference done 3297/5000. 0.2146 s / img. ETA=0:06:07
[32m[11/13 20:49:33 d2.evaluation.evaluator]: [0mInference done 3319/5000. 0.2147 s / img. ETA=0:06:02
[32m[11/13 20:49:38 d2.evaluation.evaluator]: [0mInference done 3343/5000. 0.2148 s / img. ETA=0:05:57
[32m[11/13 20:49:43 d2.evaluation.evaluator]: [0mInference done 3366/5000. 0.2148 s / img. ETA=0:05:52
[32m[11/13 20:49:48 d2.evaluation.evaluator]: [0mInference done 3390/5000. 0.2148 s / img. ETA=0:05:47
[32m[11/13 20:49:53 d2.evaluation.evaluator]: [0mInference done 3414/5000. 0.2148 s / img. ETA=0:05:42
[32m[11/13 20:49:59 d2.evaluation.evaluator]: [0mInference done 3435/5000. 0.2150 s / img. ETA=0:05:38
[32m[11/13 20:50:04 d2.evaluation.evaluator]: [0mInference done 3463/5000. 0.2148 s / img. ETA=0:05:31
[32m[11/13 20:50:09 d2.evaluation.evaluator]: [0mInference done 3489/5000. 0.2146 s / img. ETA=0:05:25
[32m[11/13 20:50:14 d2.evaluation.evaluator]: [0mInference done 3513/5000. 0.2146 s / img. ETA=0:05:20
[32m[11/13 20:50:19 d2.evaluation.evaluator]: [0mInference done 3538/5000. 0.2145 s / img. ETA=0:05:15
[32m[11/13 20:50:24 d2.evaluation.evaluator]: [0mInference done 3561/5000. 0.2146 s / img. ETA=0:05:10
[32m[11/13 20:50:29 d2.evaluation.evaluator]: [0mInference done 3583/5000. 0.2147 s / img. ETA=0:05:05
[32m[11/13 20:50:34 d2.evaluation.evaluator]: [0mInference done 3606/5000. 0.2147 s / img. ETA=0:05:00
[32m[11/13 20:50:40 d2.evaluation.evaluator]: [0mInference done 3629/5000. 0.2148 s / img. ETA=0:04:55
[32m[11/13 20:50:45 d2.evaluation.evaluator]: [0mInference done 3652/5000. 0.2148 s / img. ETA=0:04:50
[32m[11/13 20:50:50 d2.evaluation.evaluator]: [0mInference done 3674/5000. 0.2150 s / img. ETA=0:04:46
[32m[11/13 20:50:55 d2.evaluation.evaluator]: [0mInference done 3696/5000. 0.2151 s / img. ETA=0:04:41
[32m[11/13 20:51:00 d2.evaluation.evaluator]: [0mInference done 3720/5000. 0.2150 s / img. ETA=0:04:36
[32m[11/13 20:51:05 d2.evaluation.evaluator]: [0mInference done 3744/5000. 0.2150 s / img. ETA=0:04:31
[32m[11/13 20:51:10 d2.evaluation.evaluator]: [0mInference done 3767/5000. 0.2150 s / img. ETA=0:04:26
[32m[11/13 20:51:15 d2.evaluation.evaluator]: [0mInference done 3789/5000. 0.2151 s / img. ETA=0:04:21
[32m[11/13 20:51:21 d2.evaluation.evaluator]: [0mInference done 3809/5000. 0.2154 s / img. ETA=0:04:17
[32m[11/13 20:51:26 d2.evaluation.evaluator]: [0mInference done 3831/5000. 0.2155 s / img. ETA=0:04:13
[32m[11/13 20:51:31 d2.evaluation.evaluator]: [0mInference done 3856/5000. 0.2154 s / img. ETA=0:04:07
[32m[11/13 20:51:36 d2.evaluation.evaluator]: [0mInference done 3879/5000. 0.2154 s / img. ETA=0:04:02
[32m[11/13 20:51:41 d2.evaluation.evaluator]: [0mInference done 3903/5000. 0.2154 s / img. ETA=0:03:57
[32m[11/13 20:51:46 d2.evaluation.evaluator]: [0mInference done 3927/5000. 0.2154 s / img. ETA=0:03:52
[32m[11/13 20:51:51 d2.evaluation.evaluator]: [0mInference done 3950/5000. 0.2154 s / img. ETA=0:03:47
[32m[11/13 20:51:57 d2.evaluation.evaluator]: [0mInference done 3972/5000. 0.2156 s / img. ETA=0:03:42
[32m[11/13 20:52:02 d2.evaluation.evaluator]: [0mInference done 3998/5000. 0.2155 s / img. ETA=0:03:36
[32m[11/13 20:52:07 d2.evaluation.evaluator]: [0mInference done 4021/5000. 0.2155 s / img. ETA=0:03:31
[32m[11/13 20:52:12 d2.evaluation.evaluator]: [0mInference done 4047/5000. 0.2154 s / img. ETA=0:03:26
[32m[11/13 20:52:17 d2.evaluation.evaluator]: [0mInference done 4071/5000. 0.2154 s / img. ETA=0:03:20
[32m[11/13 20:52:23 d2.evaluation.evaluator]: [0mInference done 4091/5000. 0.2156 s / img. ETA=0:03:16
[32m[11/13 20:52:28 d2.evaluation.evaluator]: [0mInference done 4116/5000. 0.2155 s / img. ETA=0:03:11
[32m[11/13 20:52:33 d2.evaluation.evaluator]: [0mInference done 4139/5000. 0.2155 s / img. ETA=0:03:06
[32m[11/13 20:52:38 d2.evaluation.evaluator]: [0mInference done 4160/5000. 0.2157 s / img. ETA=0:03:01
[32m[11/13 20:52:43 d2.evaluation.evaluator]: [0mInference done 4182/5000. 0.2157 s / img. ETA=0:02:57
[32m[11/13 20:52:48 d2.evaluation.evaluator]: [0mInference done 4207/5000. 0.2156 s / img. ETA=0:02:51
[32m[11/13 20:52:53 d2.evaluation.evaluator]: [0mInference done 4231/5000. 0.2156 s / img. ETA=0:02:46
[32m[11/13 20:52:58 d2.evaluation.evaluator]: [0mInference done 4252/5000. 0.2158 s / img. ETA=0:02:42
[32m[11/13 20:53:03 d2.evaluation.evaluator]: [0mInference done 4275/5000. 0.2158 s / img. ETA=0:02:37
[32m[11/13 20:53:09 d2.evaluation.evaluator]: [0mInference done 4298/5000. 0.2158 s / img. ETA=0:02:32
[32m[11/13 20:53:14 d2.evaluation.evaluator]: [0mInference done 4322/5000. 0.2158 s / img. ETA=0:02:26
[32m[11/13 20:53:19 d2.evaluation.evaluator]: [0mInference done 4347/5000. 0.2157 s / img. ETA=0:02:21
[32m[11/13 20:53:24 d2.evaluation.evaluator]: [0mInference done 4369/5000. 0.2158 s / img. ETA=0:02:16
[32m[11/13 20:53:29 d2.evaluation.evaluator]: [0mInference done 4391/5000. 0.2159 s / img. ETA=0:02:12
[32m[11/13 20:53:34 d2.evaluation.evaluator]: [0mInference done 4412/5000. 0.2160 s / img. ETA=0:02:07
[32m[11/13 20:53:39 d2.evaluation.evaluator]: [0mInference done 4436/5000. 0.2160 s / img. ETA=0:02:02
[32m[11/13 20:53:44 d2.evaluation.evaluator]: [0mInference done 4457/5000. 0.2162 s / img. ETA=0:01:57
[32m[11/13 20:53:50 d2.evaluation.evaluator]: [0mInference done 4478/5000. 0.2163 s / img. ETA=0:01:53
[32m[11/13 20:53:55 d2.evaluation.evaluator]: [0mInference done 4503/5000. 0.2162 s / img. ETA=0:01:47
[32m[11/13 20:54:00 d2.evaluation.evaluator]: [0mInference done 4528/5000. 0.2162 s / img. ETA=0:01:42
[32m[11/13 20:54:05 d2.evaluation.evaluator]: [0mInference done 4550/5000. 0.2162 s / img. ETA=0:01:37
[32m[11/13 20:54:10 d2.evaluation.evaluator]: [0mInference done 4575/5000. 0.2161 s / img. ETA=0:01:32
[32m[11/13 20:54:15 d2.evaluation.evaluator]: [0mInference done 4601/5000. 0.2160 s / img. ETA=0:01:26
[32m[11/13 20:54:20 d2.evaluation.evaluator]: [0mInference done 4626/5000. 0.2160 s / img. ETA=0:01:21
[32m[11/13 20:54:25 d2.evaluation.evaluator]: [0mInference done 4648/5000. 0.2160 s / img. ETA=0:01:16
[32m[11/13 20:54:30 d2.evaluation.evaluator]: [0mInference done 4669/5000. 0.2162 s / img. ETA=0:01:11
[32m[11/13 20:54:36 d2.evaluation.evaluator]: [0mInference done 4692/5000. 0.2162 s / img. ETA=0:01:06
[32m[11/13 20:54:41 d2.evaluation.evaluator]: [0mInference done 4716/5000. 0.2162 s / img. ETA=0:01:01
[32m[11/13 20:54:46 d2.evaluation.evaluator]: [0mInference done 4740/5000. 0.2161 s / img. ETA=0:00:56
[32m[11/13 20:54:51 d2.evaluation.evaluator]: [0mInference done 4763/5000. 0.2161 s / img. ETA=0:00:51
[32m[11/13 20:54:56 d2.evaluation.evaluator]: [0mInference done 4790/5000. 0.2160 s / img. ETA=0:00:45
[32m[11/13 20:55:01 d2.evaluation.evaluator]: [0mInference done 4812/5000. 0.2160 s / img. ETA=0:00:40
[32m[11/13 20:55:06 d2.evaluation.evaluator]: [0mInference done 4836/5000. 0.2160 s / img. ETA=0:00:35
[32m[11/13 20:55:11 d2.evaluation.evaluator]: [0mInference done 4857/5000. 0.2161 s / img. ETA=0:00:31
[32m[11/13 20:55:16 d2.evaluation.evaluator]: [0mInference done 4879/5000. 0.2162 s / img. ETA=0:00:26
[32m[11/13 20:55:21 d2.evaluation.evaluator]: [0mInference done 4902/5000. 0.2162 s / img. ETA=0:00:21
[32m[11/13 20:55:26 d2.evaluation.evaluator]: [0mInference done 4925/5000. 0.2162 s / img. ETA=0:00:16
[32m[11/13 20:55:32 d2.evaluation.evaluator]: [0mInference done 4946/5000. 0.2164 s / img. ETA=0:00:11
[32m[11/13 20:55:37 d2.evaluation.evaluator]: [0mInference done 4969/5000. 0.2164 s / img. ETA=0:00:06
[32m[11/13 20:55:42 d2.evaluation.evaluator]: [0mInference done 4994/5000. 0.2163 s / img. ETA=0:00:01
[32m[11/13 20:55:43 d2.evaluation.evaluator]: [0mTotal inference time: 0:18:05.366232 (0.217291 s / img per device, on 1 devices)
[32m[11/13 20:55:43 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:18:00 (0.216304 s / img per device, on 1 devices)
[32m[11/13 20:55:44 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/13 20:55:44 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/13 20:55:44 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.40s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
COCOeval_opt.evaluate() finished in 5.65 seconds.
Accumulating evaluation results...
COCOeval_opt.accumulate() finished in 0.66 seconds.
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.357
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.561
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.380
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.192
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.409
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.487
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.311
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.485
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.506
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.310
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.563
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.664
[32m[11/13 20:55:51 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 35.681 | 56.098 | 38.027 | 19.234 | 40.860 | 48.712 |
[32m[11/13 20:55:51 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category      | AP     | category     | AP     | category       | AP     |
|:--------------|:-------|:-------------|:-------|:---------------|:-------|
| person        | 50.350 | bicycle      | 27.523 | car            | 37.185 |
| motorcycle    | 38.172 | airplane     | 59.584 | bus            | 61.440 |
| train         | 56.396 | truck        | 28.257 | boat           | 22.444 |
| traffic light | 22.127 | fire hydrant | 62.067 | stop sign      | 60.377 |
| parking meter | 42.841 | bench        | 19.896 | bird           | 30.032 |
| cat           | 60.329 | dog          | 52.680 | horse          | 52.337 |
| sheep         | 44.474 | cow          | 47.850 | elephant       | 55.965 |
| bear          | 60.552 | zebra        | 64.517 | giraffe        | 63.984 |
| backpack      | 11.795 | umbrella     | 33.448 | handbag        | 10.412 |
| tie           | 24.751 | suitcase     | 27.130 | frisbee        | 58.991 |
| skis          | 17.071 | snowboard    | 30.937 | sports ball    | 38.860 |
| kite          | 35.119 | baseball bat | 20.442 | baseball glove | 30.233 |
| skateboard    | 44.891 | surfboard    | 31.239 | tennis racket  | 42.120 |
| bottle        | 32.248 | wine glass   | 28.630 | cup            | 36.748 |
| fork          | 26.514 | knife        | 9.067  | spoon          | 10.924 |
| bowl          | 36.522 | banana       | 20.818 | apple          | 16.500 |
| sandwich      | 29.789 | orange       | 27.876 | broccoli       | 21.829 |
| carrot        | 18.538 | hot dog      | 29.126 | pizza          | 50.045 |
| donut         | 39.001 | cake         | 29.377 | chair          | 23.011 |
| couch         | 36.161 | potted plant | 21.234 | bed            | 36.842 |
| dining table  | 24.268 | toilet       | 55.259 | tv             | 51.192 |
| laptop        | 54.792 | mouse        | 51.603 | remote         | 20.563 |
| keyboard      | 46.830 | cell phone   | 28.652 | microwave      | 51.092 |
| oven          | 29.833 | toaster      | 33.304 | sink           | 31.475 |
| refrigerator  | 47.891 | book         | 10.685 | clock          | 45.312 |
| vase          | 31.155 | scissors     | 22.562 | teddy bear     | 42.953 |
| hair drier    | 4.239  | toothbrush   | 11.217 |                |        |
[32m[11/13 20:55:52 d2.engine.defaults]: [0mEvaluation results for coco_2017_val in csv format:
[32m[11/13 20:55:52 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/13 20:55:52 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/13 20:55:52 d2.evaluation.testing]: [0mcopypaste: 35.6812,56.0984,38.0266,19.2339,40.8596,48.7120
